// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cyber/energy/v1beta1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateEnergyRoute struct {
	Source      string `protobuf:"bytes,1,opt,name=source,proto3" json:"source" yaml:"source"`
	Destination string `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination" yaml:"destination"`
	Alias       string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias" yaml:"alias"`
}

func (m *MsgCreateEnergyRoute) Reset()         { *m = MsgCreateEnergyRoute{} }
func (m *MsgCreateEnergyRoute) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEnergyRoute) ProtoMessage()    {}
func (*MsgCreateEnergyRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_e37ef182071be00f, []int{0}
}
func (m *MsgCreateEnergyRoute) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEnergyRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEnergyRoute.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEnergyRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEnergyRoute.Merge(m, src)
}
func (m *MsgCreateEnergyRoute) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEnergyRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEnergyRoute.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEnergyRoute proto.InternalMessageInfo

type MsgEditEnergyRoute struct {
	Source      string                                  `protobuf:"bytes,1,opt,name=source,proto3" json:"source" yaml:"source"`
	Destination string                                  `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination" yaml:"destination"`
	Value       github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,3,opt,name=value,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin" json:"value" yaml:"value"`
}

func (m *MsgEditEnergyRoute) Reset()         { *m = MsgEditEnergyRoute{} }
func (m *MsgEditEnergyRoute) String() string { return proto.CompactTextString(m) }
func (*MsgEditEnergyRoute) ProtoMessage()    {}
func (*MsgEditEnergyRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_e37ef182071be00f, []int{1}
}
func (m *MsgEditEnergyRoute) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditEnergyRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditEnergyRoute.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditEnergyRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditEnergyRoute.Merge(m, src)
}
func (m *MsgEditEnergyRoute) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditEnergyRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditEnergyRoute.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditEnergyRoute proto.InternalMessageInfo

type MsgDeleteEnergyRoute struct {
	Source      string `protobuf:"bytes,1,opt,name=source,proto3" json:"source" yaml:"source"`
	Destination string `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination" yaml:"destination"`
}

func (m *MsgDeleteEnergyRoute) Reset()         { *m = MsgDeleteEnergyRoute{} }
func (m *MsgDeleteEnergyRoute) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteEnergyRoute) ProtoMessage()    {}
func (*MsgDeleteEnergyRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_e37ef182071be00f, []int{2}
}
func (m *MsgDeleteEnergyRoute) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteEnergyRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteEnergyRoute.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteEnergyRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteEnergyRoute.Merge(m, src)
}
func (m *MsgDeleteEnergyRoute) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteEnergyRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteEnergyRoute.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteEnergyRoute proto.InternalMessageInfo

type MsgEditEnergyRouteAlias struct {
	Source      string `protobuf:"bytes,1,opt,name=source,proto3" json:"source" yaml:"source"`
	Destination string `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination" yaml:"destination"`
	Alias       string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias" yaml:"alias"`
}

func (m *MsgEditEnergyRouteAlias) Reset()         { *m = MsgEditEnergyRouteAlias{} }
func (m *MsgEditEnergyRouteAlias) String() string { return proto.CompactTextString(m) }
func (*MsgEditEnergyRouteAlias) ProtoMessage()    {}
func (*MsgEditEnergyRouteAlias) Descriptor() ([]byte, []int) {
	return fileDescriptor_e37ef182071be00f, []int{3}
}
func (m *MsgEditEnergyRouteAlias) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditEnergyRouteAlias) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditEnergyRouteAlias.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditEnergyRouteAlias) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditEnergyRouteAlias.Merge(m, src)
}
func (m *MsgEditEnergyRouteAlias) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditEnergyRouteAlias) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditEnergyRouteAlias.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditEnergyRouteAlias proto.InternalMessageInfo

type MsgCreateEnergyRouteResponse struct {
}

func (m *MsgCreateEnergyRouteResponse) Reset()         { *m = MsgCreateEnergyRouteResponse{} }
func (m *MsgCreateEnergyRouteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEnergyRouteResponse) ProtoMessage()    {}
func (*MsgCreateEnergyRouteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e37ef182071be00f, []int{4}
}
func (m *MsgCreateEnergyRouteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEnergyRouteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEnergyRouteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEnergyRouteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEnergyRouteResponse.Merge(m, src)
}
func (m *MsgCreateEnergyRouteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEnergyRouteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEnergyRouteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEnergyRouteResponse proto.InternalMessageInfo

type MsgEditEnergyRouteResponse struct {
}

func (m *MsgEditEnergyRouteResponse) Reset()         { *m = MsgEditEnergyRouteResponse{} }
func (m *MsgEditEnergyRouteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEditEnergyRouteResponse) ProtoMessage()    {}
func (*MsgEditEnergyRouteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e37ef182071be00f, []int{5}
}
func (m *MsgEditEnergyRouteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditEnergyRouteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditEnergyRouteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditEnergyRouteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditEnergyRouteResponse.Merge(m, src)
}
func (m *MsgEditEnergyRouteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditEnergyRouteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditEnergyRouteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditEnergyRouteResponse proto.InternalMessageInfo

type MsgDeleteEnergyRouteResponse struct {
}

func (m *MsgDeleteEnergyRouteResponse) Reset()         { *m = MsgDeleteEnergyRouteResponse{} }
func (m *MsgDeleteEnergyRouteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteEnergyRouteResponse) ProtoMessage()    {}
func (*MsgDeleteEnergyRouteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e37ef182071be00f, []int{6}
}
func (m *MsgDeleteEnergyRouteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteEnergyRouteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteEnergyRouteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteEnergyRouteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteEnergyRouteResponse.Merge(m, src)
}
func (m *MsgDeleteEnergyRouteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteEnergyRouteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteEnergyRouteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteEnergyRouteResponse proto.InternalMessageInfo

type MsgEditEnergyRouteAliasResponse struct {
}

func (m *MsgEditEnergyRouteAliasResponse) Reset()         { *m = MsgEditEnergyRouteAliasResponse{} }
func (m *MsgEditEnergyRouteAliasResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEditEnergyRouteAliasResponse) ProtoMessage()    {}
func (*MsgEditEnergyRouteAliasResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e37ef182071be00f, []int{7}
}
func (m *MsgEditEnergyRouteAliasResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditEnergyRouteAliasResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditEnergyRouteAliasResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditEnergyRouteAliasResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditEnergyRouteAliasResponse.Merge(m, src)
}
func (m *MsgEditEnergyRouteAliasResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditEnergyRouteAliasResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditEnergyRouteAliasResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditEnergyRouteAliasResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateEnergyRoute)(nil), "cyber.energy.v1beta1.MsgCreateEnergyRoute")
	proto.RegisterType((*MsgEditEnergyRoute)(nil), "cyber.energy.v1beta1.MsgEditEnergyRoute")
	proto.RegisterType((*MsgDeleteEnergyRoute)(nil), "cyber.energy.v1beta1.MsgDeleteEnergyRoute")
	proto.RegisterType((*MsgEditEnergyRouteAlias)(nil), "cyber.energy.v1beta1.MsgEditEnergyRouteAlias")
	proto.RegisterType((*MsgCreateEnergyRouteResponse)(nil), "cyber.energy.v1beta1.MsgCreateEnergyRouteResponse")
	proto.RegisterType((*MsgEditEnergyRouteResponse)(nil), "cyber.energy.v1beta1.MsgEditEnergyRouteResponse")
	proto.RegisterType((*MsgDeleteEnergyRouteResponse)(nil), "cyber.energy.v1beta1.MsgDeleteEnergyRouteResponse")
	proto.RegisterType((*MsgEditEnergyRouteAliasResponse)(nil), "cyber.energy.v1beta1.MsgEditEnergyRouteAliasResponse")
}

func init() { proto.RegisterFile("cyber/energy/v1beta1/tx.proto", fileDescriptor_e37ef182071be00f) }

var fileDescriptor_e37ef182071be00f = []byte{
	// 525 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x55, 0xbf, 0x6f, 0xd3, 0x40,
	0x18, 0xb5, 0x1b, 0xb5, 0x82, 0x2b, 0x08, 0xf5, 0x14, 0xa9, 0xa9, 0x29, 0x3e, 0xb0, 0x84, 0xa8,
	0x90, 0x72, 0x6e, 0x53, 0xb1, 0x74, 0x23, 0xa5, 0x02, 0x21, 0x65, 0xf1, 0xc8, 0x82, 0x6c, 0xe7,
	0x74, 0x58, 0x24, 0xbe, 0xc8, 0xdf, 0xa5, 0xaa, 0x25, 0xfe, 0x00, 0x46, 0x36, 0x36, 0xd4, 0x3f,
	0xa7, 0x1b, 0x15, 0x13, 0x03, 0xb2, 0x50, 0xb2, 0xa0, 0x8c, 0x19, 0x99, 0x50, 0xee, 0xe2, 0x60,
	0xd5, 0x31, 0x0a, 0x5b, 0x3b, 0x25, 0xf7, 0xbd, 0xf7, 0xbd, 0xbb, 0xe7, 0x77, 0x3f, 0xd0, 0x83,
	0x30, 0x0d, 0x58, 0xe2, 0xb2, 0x98, 0x25, 0x3c, 0x75, 0x4f, 0x0f, 0x02, 0x26, 0xfd, 0x03, 0x57,
	0x9e, 0xd1, 0x41, 0x22, 0xa4, 0xc0, 0x75, 0x05, 0x53, 0x0d, 0xd3, 0x39, 0x6c, 0xd5, 0xb9, 0xe0,
	0x42, 0x11, 0xdc, 0xd9, 0x3f, 0xcd, 0xb5, 0xb6, 0x43, 0x01, 0x7d, 0x01, 0x6f, 0x35, 0x10, 0x8a,
	0x28, 0xd6, 0x80, 0xf3, 0xd5, 0x44, 0xf5, 0x0e, 0xf0, 0xe3, 0x84, 0xf9, 0x92, 0x9d, 0x28, 0x29,
	0x4f, 0x0c, 0x25, 0xc3, 0x87, 0x68, 0x03, 0xc4, 0x30, 0x09, 0x59, 0xc3, 0x7c, 0x68, 0xee, 0xdd,
	0x6e, 0xdf, 0x9f, 0x64, 0x64, 0x5e, 0x99, 0x66, 0xe4, 0x6e, 0xea, 0xf7, 0x7b, 0x47, 0x8e, 0x1e,
	0x3b, 0xde, 0x1c, 0xc0, 0x2f, 0xd1, 0x66, 0x97, 0x81, 0x8c, 0x62, 0x5f, 0x46, 0x22, 0x6e, 0xac,
	0xa9, 0xce, 0xc7, 0x93, 0x8c, 0x14, 0xcb, 0xd3, 0x8c, 0x60, 0xdd, 0x5e, 0x28, 0x3a, 0x5e, 0x91,
	0x82, 0x5d, 0xb4, 0xee, 0xf7, 0x22, 0x1f, 0x1a, 0x35, 0x25, 0xb1, 0x33, 0xc9, 0x88, 0x2e, 0x4c,
	0x33, 0x72, 0x47, 0x37, 0xab, 0xa1, 0xe3, 0xe9, 0xf2, 0xd1, 0xad, 0x8f, 0xe7, 0xc4, 0xf8, 0x75,
	0x4e, 0x0c, 0xe7, 0xf3, 0x1a, 0xc2, 0x1d, 0xe0, 0x27, 0xdd, 0x48, 0x5e, 0x1f, 0x3f, 0x29, 0x5a,
	0x3f, 0xf5, 0x7b, 0x43, 0xa6, 0xfc, 0x6c, 0xb6, 0x76, 0xa8, 0xce, 0x83, 0x06, 0x3e, 0xb0, 0x3c,
	0x3a, 0x7a, 0x2c, 0xa2, 0xb8, 0xfd, 0xea, 0x22, 0x23, 0xc6, 0xcc, 0xae, 0xe2, 0xff, 0xb5, 0xab,
	0x86, 0xce, 0xef, 0x8c, 0x3c, 0xe1, 0x91, 0x7c, 0x37, 0x0c, 0x68, 0x28, 0xfa, 0xae, 0x56, 0x99,
	0xff, 0x34, 0xa1, 0xfb, 0xde, 0x95, 0xe9, 0x80, 0x81, 0x52, 0xf2, 0xb4, 0x42, 0xe1, 0xcb, 0x7c,
	0xd1, 0x59, 0xbf, 0x60, 0x3d, 0x76, 0x8d, 0xb2, 0x2e, 0x2c, 0xf0, 0x9b, 0x89, 0xb6, 0xcb, 0xd1,
	0x3d, 0x9f, 0x05, 0x7c, 0x73, 0xf7, 0xa3, 0x8d, 0x76, 0x97, 0x1d, 0x30, 0x8f, 0xc1, 0x40, 0xc4,
	0xc0, 0x9c, 0x5d, 0x64, 0x95, 0x3d, 0x2f, 0x50, 0xdd, 0x5d, 0x8a, 0x6c, 0x81, 0x3f, 0x42, 0xa4,
	0xe2, 0x8b, 0xe5, 0x94, 0xd6, 0x8f, 0x1a, 0xaa, 0x75, 0x80, 0x63, 0x40, 0x5b, 0xe5, 0x63, 0xfe,
	0x94, 0x2e, 0xbb, 0x45, 0xe8, 0xb2, 0x15, 0x5b, 0xad, 0xd5, 0xb9, 0xf9, 0xe4, 0xb8, 0x8f, 0xee,
	0x5d, 0x3d, 0x89, 0x7b, 0x95, 0x32, 0x57, 0x98, 0xd6, 0xfe, 0xaa, 0xcc, 0xc5, 0x74, 0x80, 0xb6,
	0xca, 0xdb, 0xbb, 0xda, 0x63, 0x89, 0xfb, 0x0f, 0x8f, 0x95, 0x19, 0xe0, 0x0f, 0xa8, 0xbe, 0x74,
	0xcb, 0x36, 0x57, 0x5d, 0xbe, 0xa2, 0x5b, 0xcf, 0xfe, 0x8b, 0x9e, 0xcf, 0xde, 0x7e, 0x7d, 0x31,
	0xb2, 0xcd, 0xcb, 0x91, 0x6d, 0xfe, 0x1c, 0xd9, 0xe6, 0xa7, 0xb1, 0x6d, 0x5c, 0x8e, 0x6d, 0xe3,
	0xfb, 0xd8, 0x36, 0xde, 0xec, 0x17, 0x6f, 0x8a, 0x99, 0x74, 0x28, 0x62, 0x9e, 0x30, 0x00, 0x97,
	0x8b, 0xa6, 0x7e, 0x5b, 0xce, 0xf2, 0xd7, 0x45, 0xdd, 0x1b, 0xc1, 0x86, 0x7a, 0x14, 0x0e, 0xff,
	0x04, 0x00, 0x00, 0xff, 0xff, 0x24, 0xa0, 0x36, 0x82, 0x7a, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateEnergyRoute(ctx context.Context, in *MsgCreateEnergyRoute, opts ...grpc.CallOption) (*MsgCreateEnergyRouteResponse, error)
	EditEnergyRoute(ctx context.Context, in *MsgEditEnergyRoute, opts ...grpc.CallOption) (*MsgEditEnergyRouteResponse, error)
	DeleteEnergyRoute(ctx context.Context, in *MsgDeleteEnergyRoute, opts ...grpc.CallOption) (*MsgDeleteEnergyRouteResponse, error)
	EditEnergyRouteAlias(ctx context.Context, in *MsgEditEnergyRouteAlias, opts ...grpc.CallOption) (*MsgEditEnergyRouteAliasResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateEnergyRoute(ctx context.Context, in *MsgCreateEnergyRoute, opts ...grpc.CallOption) (*MsgCreateEnergyRouteResponse, error) {
	out := new(MsgCreateEnergyRouteResponse)
	err := c.cc.Invoke(ctx, "/cyber.energy.v1beta1.Msg/CreateEnergyRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EditEnergyRoute(ctx context.Context, in *MsgEditEnergyRoute, opts ...grpc.CallOption) (*MsgEditEnergyRouteResponse, error) {
	out := new(MsgEditEnergyRouteResponse)
	err := c.cc.Invoke(ctx, "/cyber.energy.v1beta1.Msg/EditEnergyRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteEnergyRoute(ctx context.Context, in *MsgDeleteEnergyRoute, opts ...grpc.CallOption) (*MsgDeleteEnergyRouteResponse, error) {
	out := new(MsgDeleteEnergyRouteResponse)
	err := c.cc.Invoke(ctx, "/cyber.energy.v1beta1.Msg/DeleteEnergyRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EditEnergyRouteAlias(ctx context.Context, in *MsgEditEnergyRouteAlias, opts ...grpc.CallOption) (*MsgEditEnergyRouteAliasResponse, error) {
	out := new(MsgEditEnergyRouteAliasResponse)
	err := c.cc.Invoke(ctx, "/cyber.energy.v1beta1.Msg/EditEnergyRouteAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateEnergyRoute(context.Context, *MsgCreateEnergyRoute) (*MsgCreateEnergyRouteResponse, error)
	EditEnergyRoute(context.Context, *MsgEditEnergyRoute) (*MsgEditEnergyRouteResponse, error)
	DeleteEnergyRoute(context.Context, *MsgDeleteEnergyRoute) (*MsgDeleteEnergyRouteResponse, error)
	EditEnergyRouteAlias(context.Context, *MsgEditEnergyRouteAlias) (*MsgEditEnergyRouteAliasResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateEnergyRoute(ctx context.Context, req *MsgCreateEnergyRoute) (*MsgCreateEnergyRouteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEnergyRoute not implemented")
}
func (*UnimplementedMsgServer) EditEnergyRoute(ctx context.Context, req *MsgEditEnergyRoute) (*MsgEditEnergyRouteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditEnergyRoute not implemented")
}
func (*UnimplementedMsgServer) DeleteEnergyRoute(ctx context.Context, req *MsgDeleteEnergyRoute) (*MsgDeleteEnergyRouteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEnergyRoute not implemented")
}
func (*UnimplementedMsgServer) EditEnergyRouteAlias(ctx context.Context, req *MsgEditEnergyRouteAlias) (*MsgEditEnergyRouteAliasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditEnergyRouteAlias not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateEnergyRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateEnergyRoute)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateEnergyRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cyber.energy.v1beta1.Msg/CreateEnergyRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateEnergyRoute(ctx, req.(*MsgCreateEnergyRoute))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EditEnergyRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEditEnergyRoute)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EditEnergyRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cyber.energy.v1beta1.Msg/EditEnergyRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EditEnergyRoute(ctx, req.(*MsgEditEnergyRoute))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteEnergyRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteEnergyRoute)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteEnergyRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cyber.energy.v1beta1.Msg/DeleteEnergyRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteEnergyRoute(ctx, req.(*MsgDeleteEnergyRoute))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EditEnergyRouteAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEditEnergyRouteAlias)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EditEnergyRouteAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cyber.energy.v1beta1.Msg/EditEnergyRouteAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EditEnergyRouteAlias(ctx, req.(*MsgEditEnergyRouteAlias))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cyber.energy.v1beta1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEnergyRoute",
			Handler:    _Msg_CreateEnergyRoute_Handler,
		},
		{
			MethodName: "EditEnergyRoute",
			Handler:    _Msg_EditEnergyRoute_Handler,
		},
		{
			MethodName: "DeleteEnergyRoute",
			Handler:    _Msg_DeleteEnergyRoute_Handler,
		},
		{
			MethodName: "EditEnergyRouteAlias",
			Handler:    _Msg_EditEnergyRouteAlias_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cyber/energy/v1beta1/tx.proto",
}

func (m *MsgCreateEnergyRoute) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEnergyRoute) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEnergyRoute) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Alias) > 0 {
		i -= len(m.Alias)
		copy(dAtA[i:], m.Alias)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Alias)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Destination) > 0 {
		i -= len(m.Destination)
		copy(dAtA[i:], m.Destination)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Destination)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Source) > 0 {
		i -= len(m.Source)
		copy(dAtA[i:], m.Source)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Source)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEditEnergyRoute) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditEnergyRoute) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditEnergyRoute) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Value.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.Destination) > 0 {
		i -= len(m.Destination)
		copy(dAtA[i:], m.Destination)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Destination)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Source) > 0 {
		i -= len(m.Source)
		copy(dAtA[i:], m.Source)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Source)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteEnergyRoute) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteEnergyRoute) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteEnergyRoute) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Destination) > 0 {
		i -= len(m.Destination)
		copy(dAtA[i:], m.Destination)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Destination)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Source) > 0 {
		i -= len(m.Source)
		copy(dAtA[i:], m.Source)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Source)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEditEnergyRouteAlias) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditEnergyRouteAlias) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditEnergyRouteAlias) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Alias) > 0 {
		i -= len(m.Alias)
		copy(dAtA[i:], m.Alias)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Alias)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Destination) > 0 {
		i -= len(m.Destination)
		copy(dAtA[i:], m.Destination)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Destination)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Source) > 0 {
		i -= len(m.Source)
		copy(dAtA[i:], m.Source)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Source)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateEnergyRouteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEnergyRouteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEnergyRouteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgEditEnergyRouteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditEnergyRouteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditEnergyRouteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteEnergyRouteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteEnergyRouteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteEnergyRouteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgEditEnergyRouteAliasResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditEnergyRouteAliasResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditEnergyRouteAliasResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateEnergyRoute) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Source)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Destination)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Alias)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgEditEnergyRoute) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Source)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Destination)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Value.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgDeleteEnergyRoute) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Source)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Destination)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgEditEnergyRouteAlias) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Source)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Destination)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Alias)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateEnergyRouteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgEditEnergyRouteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteEnergyRouteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgEditEnergyRouteAliasResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateEnergyRoute) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEnergyRoute: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEnergyRoute: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Source = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Destination", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Destination = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Alias", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Alias = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditEnergyRoute) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditEnergyRoute: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditEnergyRoute: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Source = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Destination", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Destination = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Value.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteEnergyRoute) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteEnergyRoute: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteEnergyRoute: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Source = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Destination", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Destination = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditEnergyRouteAlias) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditEnergyRouteAlias: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditEnergyRouteAlias: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Source = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Destination", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Destination = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Alias", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Alias = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateEnergyRouteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEnergyRouteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEnergyRouteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditEnergyRouteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditEnergyRouteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditEnergyRouteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteEnergyRouteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteEnergyRouteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteEnergyRouteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditEnergyRouteAliasResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditEnergyRouteAliasResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditEnergyRouteAliasResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
