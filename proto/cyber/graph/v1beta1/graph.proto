syntax = "proto3";
package cyber.graph.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/cybercongress/go-cyber/x/graph/types";

service Msg {
    rpc Cyberlink(MsgCyberlink) returns (MsgCyberlinkResponse);
}

message MsgCyberlink {
    option (gogoproto.equal)           = false;
    option (gogoproto.goproto_getters) = false;

    string address      = 1 [(gogoproto.jsontag) = "address", (gogoproto.moretags) = "yaml:\"address\""];
    repeated Link links = 2 [(gogoproto.jsontag) = "links", (gogoproto.moretags) = "yaml:\"links\"", (gogoproto.nullable) = false];
}

message MsgCyberlinkResponse { }

message Link {
    option (gogoproto.equal)           = false;
    option (gogoproto.goproto_getters) = false;

    string from = 1 [(gogoproto.moretags) = "yaml:\"from\""];
    string to   = 2 [(gogoproto.moretags) = "yaml:\"to\""];
}

message CompactLink {
    option (gogoproto.equal)           = false;
    option (gogoproto.goproto_getters) = false;

    uint64 from     = 1;
    uint64 to       = 2;
    uint64 account  = 3;
}
