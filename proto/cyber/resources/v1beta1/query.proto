syntax = "proto3";
package cyber.resources.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cyber/resources/v1beta1/types.proto";
import "cosmos_proto/coin.proto";

option go_package = "github.com/cybercongress/go-cyber/x/resources/types";
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.equal_all) = false;

service Query {
    rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
        option (google.api.http).get = "/cyber/energy/v1beta1/resources/params";
    }
    rpc InvestmintAmount(QueryInvestmintAmountRequest) returns (QueryInvestmintAmountResponse) {
        option (google.api.http).get = "/cyber/energy/v1beta1/resources/investmint_amount";
    }
}

message QueryParamsRequest {}

message QueryParamsResponse{
    Params params = 1 [(gogoproto.nullable) = false];
}

message QueryInvestmintAmountRequest {
    cosmos.base.v1beta1.Coin amount = 1 [(gogoproto.moretags) = "yaml:\"amount\"", (gogoproto.nullable) = false];
    string resource                 = 2 [(gogoproto.moretags) = "yaml:\"resource\""];
    uint64 length                   = 3 [(gogoproto.moretags) = "yaml:\"length\""];
}

message QueryInvestmintAmountResponse {
    cosmos.base.v1beta1.Coin amount = 1 [(gogoproto.moretags) = "yaml:\"amount\"", (gogoproto.nullable) = false];
}