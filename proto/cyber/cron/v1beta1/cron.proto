syntax = "proto3";
package cyber.cron.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos_proto/coin.proto";

option go_package = "github.com/cybercongress/go-cyber/x/cron/types";

message Job {
    string creator  = 1 [(gogoproto.jsontag) = "creator", (gogoproto.moretags) = "yaml:\"creator\""];
    string contract = 2 [(gogoproto.jsontag) = "contract", (gogoproto.moretags) = "yaml:\"contract\""];
    Trigger trigger = 3 [(gogoproto.jsontag) = "trigger", (gogoproto.moretags) = "yaml:\"trigger\""];
    Load load       = 4 [(gogoproto.jsontag) = "load", (gogoproto.moretags) = "yaml:\"load\""];
    string label    = 5 [(gogoproto.jsontag) = "label", (gogoproto.moretags) = "yaml:\"label\""];
    string cid      = 6 [(gogoproto.jsontag) = "cid", (gogoproto.moretags) = "yaml:\"cid\""];
}

message Trigger {
    uint64 period = 1 [(gogoproto.moretags) = "yaml:\"period\""];
    uint64 block  = 2 [(gogoproto.moretags) = "yaml:\"block\""];
}

message Load {
    string call_data  = 1 [(gogoproto.moretags) = "yaml:\"call_data\""];
    cosmos.base.v1beta1.Coin gas_price = 2 [
                                       (gogoproto.jsontag) = "gas_price",
                                       (gogoproto.moretags) = "yaml:\"gas_price\"",
                                       (gogoproto.nullable) = false,
                                       (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin"
                                       ];
}

message JobStats {
    uint64 calls       = 1 [(gogoproto.moretags) = "yaml:\"calls\""];
    uint64 fees        = 2 [(gogoproto.moretags) = "yaml:\"fees\""];
    uint64 gas         = 3 [(gogoproto.moretags) = "yaml:\"gas\""];
    uint64 last_block  = 4 [(gogoproto.moretags) = "yaml:\"last_block\""];
}
